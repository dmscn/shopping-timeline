{"version":3,"sources":["components/MainScreen/PurchaseList/PurchaseBox/ProductTable/ProductList/ProductList.tsx","components/MainScreen/PurchaseList/PurchaseBox/ProductTable/ProductTable.tsx","components/MainScreen/PurchaseList/PurchaseBox/CheckmarkCircle/CheckmarkCircle.tsx","components/MainScreen/PurchaseList/PurchaseBox/BoxArrow/BoxArrow.tsx","components/MainScreen/PurchaseList/PurchaseBox/PurchaseBox.tsx","components/MainScreen/PurchaseList/PurchaseList.tsx","components/MainScreen/MainScreen.tsx","components/LoadingScreen/LoadingScreen.tsx","components/ErrorScreen/ErrorScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ProductList","props","products","map","product","index","productName","custom_data","find","item","key","value","productPrice","borderStyle","length","borderBottom","undefined","react_default","a","createElement","TableRow","style","timestamp","TableCell","scope","toFixed","ProductTable","Table","TableHeader","TableBody","CheckmarkCircle","Box","id","position","width","height","round","justify","align","margin","top","border","side","color","size","background","Checkmark","BoxArrow","transform","zIndex","left","right","PurchaseBox","purchase","console","log","direction","fill","elevation","overflow","pad","Plan","marginRight","Text","moment","format","Clock","Location","flexWrap","Money","revenue","horizontal","vertical","locale","PurchaseList","formatData","data","events","purchases","filter","event","transactionId","Object","objectSpread","transaction_id","reduce","acc","purchaseProducts","concat","this","Component","MainScreen","minHeight","opacity","bottom","PurchaseList_PurchaseList","LoadingScreen","ErrorScreen","error","Heading","API_URL","App","state","loading","fetchPurchases","_callee","_ref2","_data","regenerator_default","wrap","_context","prev","next","axios","get","sent","_this","setState","t0","stop","_this$state","Grommet","plain","LoadingScreen_LoadingScreen","ErrorScreen_ErrorScreen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3f01e27b.chunk.js","sourcesContent":["import React from \"react\";\nimport { TableRow, TableCell } from \"grommet\";\n\nexport interface Props {\n  products: Array<any>;\n}\n\nexport default function ProductList(props: Props): any {\n  const { products } = props;\n\n  return products.map((product: any, index: number) => {\n    const { value: productName } = product.custom_data.find(\n      (item: any) => item.key === \"product_name\"\n    );\n    const { value: productPrice } = product.custom_data.find(\n      (item: any) => item.key === \"product_price\"\n    );\n\n    const borderStyle =\n      index < products.length - 1\n        ? { borderBottom: \"1px solid #cecece\" }\n        : undefined;\n\n    return (\n      <TableRow style={borderStyle} key={product.timestamp}>\n        <TableCell scope=\"row\">{productName}</TableCell>\n        <TableCell>R$ {productPrice.toFixed(2)}</TableCell>\n      </TableRow>\n    );\n  });\n}\n","import React from \"react\";\nimport { Table, TableHeader, TableRow, TableCell, TableBody } from \"grommet\";\nimport ProductList from \"./ProductList\";\n\nexport interface Props {\n  products: Array<any>;\n}\n\nexport default function ProductTable(props: Props): JSX.Element {\n  const { products } = props;\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableCell>\n            <strong>Nome</strong>\n          </TableCell>\n          <TableCell>\n            <strong>Preço</strong>\n          </TableCell>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        <ProductList products={products} />\n      </TableBody>\n    </Table>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport { Checkmark } from \"grommet-icons\";\n\nexport default function CheckmarkCircle() {\n  return (\n    <Box\n      id=\"CheckboxCircle\"\n      style={{ position: \"absolute\" }}\n      width=\"2em\"\n      height=\"2em\"\n      round=\"full\"\n      justify=\"center\"\n      align=\"center\"\n      margin={{ top: \"small\" }}\n      border={{ side: \"all\", color: \"#CECECE\", size: \"small\" }}\n      background={{ color: \"white\" }}\n    >\n      <Checkmark color=\"#00C781\" size=\"1em\" />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"grommet\";\n\nexport default function BoxArrow() {\n  return (\n    <Box\n      id=\"arrow\"\n      style={{ transform: \"rotate(45deg)\", zIndex: 2 }}\n      width=\"1em\"\n      height=\"1em\"\n      margin={{ left: \"large\", top: \"medium\", right: \"-.5em\" }}\n      background={{ color: \"white\" }}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport { Box, Text } from \"grommet\";\nimport { Checkmark, Plan, Clock, Location, Money } from \"grommet-icons\";\nimport moment from \"moment\";\nimport \"moment/min/locales\";\n\nimport ProductTable from \"./ProductTable\";\nimport CheckmarkCircle from \"./CheckmarkCircle\";\nimport BoxArrow from \"./BoxArrow/BoxArrow\";\n\nmoment.locale(\"pt-br\");\n\nexport interface Props {\n  purchase: any;\n}\n\nexport default function PurchaseBox(props: Props): JSX.Element {\n  const {\n    purchase,\n    purchase: { products }\n  }: any = props;\n  console.log(purchase);\n  return (\n    <Box direction=\"row\" margin={{ top: \"large\", left: \"-1em\" }}>\n      <CheckmarkCircle />\n      <BoxArrow />\n\n      {/* ContentBox */}\n      <Box\n        id=\"ContentBox\"\n        fill=\"horizontal\"\n        round=\"small\"\n        elevation=\"large\"\n        overflow=\"hidden\"\n        background={{ color: \"#f6f6f6\" }}\n      >\n        {/* ContentHeader */}\n        <Box\n          style={{ zIndex: 3 }}\n          id=\"Header\"\n          fill=\"horizontal\"\n          height=\"4em\"\n          direction=\"row\"\n          pad=\"medium\"\n          justify=\"between\"\n          align=\"center\"\n          background={{ color: \"white\" }}\n        >\n          <Box direction=\"row\">\n            <Plan\n              color=\"#cecece\"\n              size=\"1.5em\"\n              style={{ marginRight: \".3em\" }}\n            />\n            <Text>{moment(purchase.timestamp).format(\"DD/MM/YYYY\")}</Text>\n          </Box>\n\n          <Box direction=\"row\">\n            <Clock\n              color=\"#cecece\"\n              size=\"1.5em\"\n              style={{ marginRight: \".3em\" }}\n            />\n            <Text>{moment(purchase.timestamp).format(\"LT\")}</Text>\n          </Box>\n\n          <Box direction=\"row\">\n            <Location\n              color=\"#cecece\"\n              size=\"1.5em\"\n              style={{ marginRight: \".3em\" }}\n            />\n            <Text>\n              {\n                purchase.custom_data.find(\n                  (item: any) => item.key === \"store_name\"\n                ).value\n              }\n            </Text>\n          </Box>\n\n          <Box direction=\"row\" style={{ flexWrap: \"nowrap\" }}>\n            <Money\n              color=\"#cecece\"\n              size=\"1.5em\"\n              style={{ marginRight: \".3em\" }}\n            />\n            <Text>R$ {purchase.revenue.toFixed(2)}</Text>\n          </Box>\n        </Box>\n\n        {/* Products */}\n        <Box pad={{ horizontal: \"medium\", vertical: \"small\" }}>\n          <ProductTable products={products} />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport PurchaseBox from \"./PurchaseBox\";\n\nexport interface Props {\n  data: any;\n}\n\nexport default class PurchaseList extends Component<Props> {\n  formatData = (data: any): Array<any> => {\n    const { events } = data;\n\n    const purchases = events\n      .filter((item: any) => item.event === \"comprou\")\n      .map((purchase: any) => {\n        const transactionId: string = purchase.custom_data.find(\n          (item: any) => item.key === \"transaction_id\"\n        ).value;\n        return {\n          ...purchase,\n          transaction_id: transactionId\n        };\n      });\n\n    const products = events\n      .filter((item: any) => item.event === \"comprou-produto\")\n      .map((product: any) => {\n        const transactionId: string = product.custom_data.find(\n          (item: any) => item.key === \"transaction_id\"\n        ).value;\n        return {\n          ...product,\n          transaction_id: transactionId\n        };\n      });\n\n    let result = purchases.reduce((acc: Array<any>, purchase: any) => {\n      const purchaseProducts: Array<any> = products.filter(\n        (product: any) => product.transaction_id === purchase.transaction_id\n      );\n      purchase = {\n        ...purchase,\n        products: purchaseProducts\n      };\n      return acc.concat(purchase);\n    }, []);\n\n    return result;\n  };\n\n  render(): Array<JSX.Element> {\n    const { data } = this.props;\n    const formatedData: Array<any> = this.formatData(data);\n    return formatedData.map((purchase: any) => (\n      <PurchaseBox purchase={purchase} key={purchase.transaction_id} />\n    ));\n  }\n}\n","import React, { Component } from \"react\";\nimport { Box } from \"grommet\";\nimport PurchaseList from \"./PurchaseList\";\n\nexport interface Props {\n  data?: any;\n}\n\nexport default function MainScreen(props: Props) {\n  return (\n    <Box\n      style={{ minHeight: \"100vh\" }}\n      align=\"center\"\n      direction=\"row\"\n      pad={{ vertical: \"large\" }}\n      background={{ color: \"#DDDFFF\", opacity: \"medium\" }}\n    >\n      <Box\n        margin={{ horizontal: \"xlarge\" }}\n        pad={{ bottom: \"large\" }}\n        justify=\"start\"\n        border={{ side: \"left\", color: \"#cecece\", size: \"small\" }}\n      >\n        <PurchaseList data={props.data} />\n      </Box>\n    </Box>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Box, Text } from \"grommet\";\n\nexport default class LoadingScreen extends Component {\n  render() {\n    return (\n      <Box justify=\"center\" align=\"center\" height=\"100vh\">\n        <Text>Loading...</Text>\n      </Box>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\n\ninterface Props {\n  error?: any;\n}\n\nexport default class ErrorScreen extends Component<Props> {\n  render() {\n    const { error } = this.props;\n    return (\n      <Box height=\"100vh\" justify=\"center\" align=\"center\">\n        <Heading>Ops.. Occorreu um erro :(</Heading>\n        <Text>{error}</Text>\n      </Box>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Grommet } from \"grommet\";\n\nimport MainScreen from \"./components/MainScreen\";\nimport LoadingScreen from \"./components/LoadingScreen\";\nimport ErrorScreen from \"./components/ErrorScreen\";\n\nconst API_URL = \"https://storage.googleapis.com/dito-questions/events.json\";\n\nexport interface State {\n  loading: boolean;\n  error?: string;\n  data?: any;\n}\nclass App extends Component<any, State> {\n  state = {\n    loading: true,\n    error: undefined,\n    data: undefined\n  };\n\n  componentDidMount(): void {\n    this.fetchPurchases();\n  }\n\n  fetchPurchases = async (): Promise<any> => {\n    try {\n      const { data } = await axios.get(API_URL);\n      this.setState({ data, loading: false });\n    } catch (err) {\n      this.setState({ error: err });\n    }\n  };\n\n  render(): JSX.Element {\n    const { loading, error, data } = this.state;\n    return (\n      <Grommet plain>\n        {loading ? (\n          <LoadingScreen />\n        ) : data ? (\n          <MainScreen data={data} />\n        ) : (\n          <ErrorScreen error={error} />\n        )}\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}