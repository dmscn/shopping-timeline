// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductList /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProductList />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "columns": Array [
        Object {
          "header": <Text
            level={1}
          >
            Produto
          </Text>,
          "primary": true,
          "property": "product_name",
        },
        Object {
          "header": <Text
            level={1}
          >
            Preço
          </Text>,
          "property": "revenue",
        },
      ],
      "data": Array [],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "columns": Array [
          Object {
            "header": <Text
              level={1}
            >
              Produto
            </Text>,
            "primary": true,
            "property": "product_name",
          },
          Object {
            "header": <Text
              level={1}
            >
              Preço
            </Text>,
            "property": "revenue",
          },
        ],
        "data": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
